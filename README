Pilot-MapReduce (PMR) is a Pilot-based implementation of the MapReduce programming model. By decoupling job scheduling and monitoring from the resource management using Pilot-based abstraction, PMR can efficiently re-use the resource management and late-binding capabilities of PilotJob and PilotData. PMR exposes an easy-to-use interface, which provides the complete functionality needed by any MapReduce algorithm, while hiding the more complex functionality, such as chunking of the input, sorting the intermediate results, managing and coordinating the map & reduce tasks, etc., which are implemented by the framework.

PMR is based on Pilot abstractions for both compute (Pilot-Jobs) and data (Pilot-Data): it utilizes Pilot-Jobs to manage the map and reduce phase computations, and Pilot-Data to shuffle intermediate data using parallel data transfers. 

# Software Pre-Requisites
Virtual environment for python packages

# Installation
git clone git://github.com/saga-project/PilotMapReduce.git
cd PilotMapReduce
python setup.py install

# WordCount Execution
  cd PilotMapReduce/applications/wordcount
  mkdir agent
  Execute the application using python single_WC.py

# Kmeans Execution
  cd PilotMapReduce/pimr/clustering/applications/
  Edit centers.txt file to add the centers.
  Edit kmeans_app.py to provide input, pilot, MapReduce and KMeans parameters.
    - The input currently supports csv format with points separated by ','. 
      It support multiple dimensions. Sample input is present in input directory.
    - Kmeans_stampede.py is stampede specific example
  Run the app using command `python kmeans_app.py` 
  

# Publication
The work related to Pilot-MapReduce is published and can be accessed at http://dl.acm.org/citation.cfm?id=2287020

Added SAGA-Python support, Iterative Capabilities
